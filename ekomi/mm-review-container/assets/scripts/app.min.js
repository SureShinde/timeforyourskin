//jshint ignore:line,*/
var jQuery_2_1_4=$.noConflict(!0),ekomi_mm_review_container=function(a,b){"use strict";
//noinspection JSUnresolvedVariable
var c=a.documentElement,
// Flag when updating db
d=!1,
// Prevent duplicate calling widgets
e=NProgress,
// Prevent duplicate calling widgets
f=!1,g=!1,
// to prevents multiple ajax loads,
h=!1,
// Filter posts
i=0,
// Store helpful reviews idies
j=[],/**
         * Sets the user agent on the HTML tag; Which allows you to be able to target
         * very specific browsers on very specific platforms with CSS:
         * html[data-useragent*="Chrome/13.0"][data-platform="Win32"]{ ... }
         */
k=function(){c.setAttribute("data-useragent",navigator.userAgent)},/**
         * Initialize the app
         */
l=function(){k()},/**
         * Display loading animation
         *
         * @param {Boolean} has_to_load If true then display animation.
         * @param loading_icon_target
         */
m=function(a,b){a?(
// progressbar
e.start(),
// shows_loading_icon
b&&b.show()):(e.done(),
// Hide the loading icon
b&&b.hide())},/**
         * Submit the frontend form
         */
n=function(){
// Start loading
m(!0,b("button.check_db .shows_loading_icon")),
// Set db loading flag
d=!0;
// The install form
var c=b("#ekomi_install_form");
// Submit the form
b.ajax({url:ekomi_app.ajaxurl,data:{action:"validate_db_connection",db_settings:{db_user:c.find('input[name*="db_user"]').val(),db_password:c.find('input[name*="db_password"]').val(),db_name:c.find('input[name*="db_name"]').val(),db_host:c.find('input[name*="db_host"]').val()}},dataType:"json",cache:!1,type:"POST",error:function(a,b,c){console.log("FATAL ERROR: "+JSON.stringify(a)+" "+b+" "+c)},success:function(c,e,f){var g="";"success"===c.state?(g='<div data-alert class="alert-box success radius">'+c.message+'<a href="#" class="close">&times;</a> </div>',b(".alert_connection_state").html(g),b("button.populate_db").toggleClass("disabled",!1)):(g='<div data-alert class="alert-box alert radius">'+c.message+'<a href="#" class="close">&times;</a> </div>',b(".alert_connection_state").html(g),b("button.populate_db").toggleClass("disabled",!0),console.log(c,e,f)),
// Reflow document
b(a).foundation("alert","reflow"),
// Stop loading
m(!1,b("button.check_db .shows_loading_icon")),
// Set db loading flag
d=!1}})},/**
         * Creates the DB
         */
o=function(){
// Start loading
m(!0),
// Set db loading flag
d=!0;var c=b("#ekomi_install_form");
// Submit the form
b.ajax({url:ekomi_app.ajaxurl,data:{action:"create_db",db_settings:{db_user:c.find('input[name*="db_user"]').val(),db_password:c.find('input[name*="db_password"]').val(),db_name:c.find('input[name*="db_name"]').val(),db_host:c.find('input[name*="db_host"]').val(),cron_interval:c.find('input[name*="cron_interval"]').val()}},dataType:"json",cache:!1,type:"POST",error:function(a,b,c){console.log("FATAL ERROR: "+JSON.stringify(a)+" "+b+" "+c)},success:function(c,e,f){var g="";"success"===c.state?(g='<div data-alert class="alert-box success radius">'+c.message+'<a href="#" class="close">&times;</a> </div>',b(".alert_connection_state").html(g),b("button.populate_db").toggleClass("disabled",!1)):(g='<div data-alert class="alert-box alert radius">'+c.message+'<a href="#" class="close">&times;</a> </div>',b(".alert_connection_state").html(g),b("button.populate_db").toggleClass("disabled",!0),console.log(c,e,f)),
// Reflow document
b(a).foundation("alert","reflow"),
// Stop loading
m(!1),
// Set db loading flag
d=!1}})},/**
         * Delets the config.php file
         */
p=function(){
// Start loading
m(!0),
// Submit the form
b.ajax({url:ekomi_app.ajaxurl,data:{action:"delete_config_php"},dataType:"json",cache:!1,type:"POST",error:function(a,b,c){console.log("FATAL ERROR: "+JSON.stringify(a)+" "+b+" "+c)},success:function(c,d,e){"success"===c.state?(
// Alert
alert(ekomi_app.i18n.config_deleted),
// reload page
location.reload()):
// Add alert
console.log(c,d,e),
// Reflow document
b(a).foundation("alert","reflow")}})},/**
         * Check database populate status
         */
q=function(){
// disable this for the moment as we have now more shops
//return true;
// Submit the form
b.ajax({url:ekomi_app.ajaxurl,data:{action:"populate_db_status",db_settings:{db_host:b('#ekomi_install_form input[name*="db_host"]').val(),db_user:b('#ekomi_install_form input[name*="db_user"]').val(),db_password:b('#ekomi_install_form input[name*="db_password"]').val(),db_name:b('#ekomi_install_form input[name*="db_name"]').val()},ekomi_app_locale:b('#ekomi_install_form select[name*="ekomi_app_locale"]').val(),ekomi_interface_id:b('#ekomi_install_form input[name*="ekomi_interface_id"]').val(),ekomi_interface_password:b('#ekomi_install_form input[name*="ekomi_interface_password"]').val(),ekomi_app_uri:b('#ekomi_install_form input[name*="ekomi_app_uri"]').val()},dataType:"json",cache:!1,type:"POST",error:function(a,b,c){
// Error in console
console.log("FATAL ERROR: "+JSON.stringify(a)+" "+b+" "+c)},success:function(a){
// Update the populate button text
var c="("+a.installPercentage+"%)";b("button.populate_db .shows_populated_percentage").html(c),
// Update the progress meter
b("#install-progress-meter").width(a.installPercentage+"%"),b("#install-status-message").html(a.installMessage),
// Update progressbar
e.configure({trickle:!1,minimum:.01}),e.set(parseFloat(a.installPercentage/100)),
// Refresh the stats again
setTimeout(function(){q()},500)}})},/**
         * Populate the DB
         */
r=function(){var c=b("#ekomi_install_form"),f=c.find('input[name*="shops[]"]'),g={};f.each(function(){g[b(this).data("index")]||(g[b(this).data("index")]={}),
// Add shop
g[b(this).data("index")][b(this).data("name")]=b(this).val()}),
// Start loading
b("button.populate_db .shows_loading_icon").show(),e.configure({minimum:.01}),e.set(.01),d=!0,b.ajax({url:ekomi_app.ajaxurl,data:{action:"populate_db",db_settings:{db_host:c.find('input[name*="db_host"]').val(),db_user:c.find('input[name*="db_user"]').val(),db_password:c.find('input[name*="db_password"]').val(),db_name:c.find('input[name*="db_name"]').val()},ekomi_no_reviews_found_action:c.find('input[name*="ekomi_no_reviews_found_action"]:checked').val(),ekomi_no_reviews_found_message:c.find('textarea[name*="ekomi_no_reviews_found_message"]').val(),ekomi_app_locale:c.find('select[name*="ekomi_app_locale"]').val(),ekomi_interface_id:c.find('input[name*="ekomi_interface_id"]').val(),ekomi_interface_password:c.find('input[name*="ekomi_interface_password"]').val(),ekomi_extra_shops:g,ekomi_app_uri:c.find('input[name*="ekomi_app_uri"]').val(),ekomi_reviews_per_page:c.find('input[name*="ekomi_reviews_per_page"]').val(),ekomi_url:c.find('input[name*="ekomi_url"]:checked').val(),ekomi_force_delete:c.find('input[name*="ekomi_force_delete"]').is(":checked"),ekomi_html_on_comments:c.find('input[name*="ekomi_html_on_comments"]').is(":checked"),ekomi_votes_on_reviews:c.find('input[name*="ekomi_votes_on_reviews"]').is(":checked"),ekomi_autoload_on_scroll:c.find('input[name*="ekomi_autoload_on_scroll"]').is(":checked"),ekomi_cron_job_delay:c.find('input[name*="ekomi_cron_job_delay"]').val()},dataType:"json",cache:!1,type:"POST",error:function(a,c,e){m(!1,b("button.populate_db .shows_loading_icon")),d=!1,console.log("FATAL ERROR:"),console.log(a.responseText),console.log(c),console.log(e),console.log("Retrying populate DB.."),r()},success:function(c){var e="";"success"===c.state?(b("#install-progress-meter").width("100%"),b("#install-status-message").html(":)"),alert(ekomi_app.i18n.db_populated),window.location.href="readme.html"):(e='<div data-alert class="alert-box alert radius">'+c.message+'<a href="#" class="close">&times;</a> </div>',b(".alert_connection_state").html(e),b("button.populate_db").toggleClass("disabled",!0),console.log(c)),b(a).foundation("alert","reflow"),m(!1,b("button.populate_db .shows_loading_icon")),d=!1}}),q()},/**
         * Check if we are currently updayting/reqyuesting the database.
         */
s=function(){
// return if db connection is on
// return if db connection is on
return d?(alert(ekomi_app.i18n.wait_for_task),!0):!1},/**
         * refreshHelpfulnessQuestions
         */
t=function(){b(".ekomi_mm_review_widget .ekomi_review").each(function(){var a=b(this).find("input[type='submit']").data("review-id");-1!==b.inArray(a,j)&&b(this).find(".ekomi_review_helpful_question").hide()})},/**
         * doRefreshReviewsView
         *
         * @param reviews
         * @param refresh_mode
         */
u=function(a,c){var d=a.reviews,e=b("#ekomi_review_template_for_js"),f="",g=b("#ekomi_reviews_container");
// Append or replace the new content
switch(
// Loop the new batch of reviews and append them to the existing
b.each(d,function(a,b){var c=e.clone();
// Edit the html
c.find(".ekomi_review_text").html(b.review_comment_text),c.find(".ekomi_stars_gold").css("width",20*b.stars+"%"),c.find(".ekomi_review_time").html(b.date),c.find(".ekomi_review_helpful_button").attr("data-review-id",b.id),c.find(".ekomi_review_helpful_question").show(),c.find(".ekomi_review_helpful_thankyou").hide(),
// Helpfulness
b.helpful_total>0&&(c.find(".ekomi_review_helpful_info").html(b.helpfulness_status_msg),c.find(".ekomi_review_helpful_info").show()),
// append HTML
f+=c.html()}),c){case"append":
// append to existing reviews
g.append(f);break;case"replace":g.html(f)}
// Update text showing how many reviews are displayed; x from y reviews
var h=g.find(".ekomi_review").length;b(".ekomi_filter .current_review_batch").html(h);
// Show or hide the load more button pages
var i=h<a.total_reviews_with_filter?!0:!1;b(".ekomi_mm_review_widget .loads_more_reviews").toggle(i),
// Refresh the questions
t()},/**
         * refreshReviewsView
         *
         * @param refresh_mode; replace or append
         * @returns {boolean}
         */
v=function(a){
// Submit the form
return b.ajax({url:ekomi_app.ajaxurl,data:{action:"loadReviews",product_id:ekomi_product_id,ekomi_shop_id:ekomi_shop_id,sort_type:b(".ekomi_mm_review_widget .ekomi_reviews_sort").val(),filter_type:i,offset_page:ekomi_offset_page},dataType:"json",cache:!1,type:"POST",error:function(a,b,c){console.log("FATAL ERROR: "+JSON.stringify(a)+" "+b+" "+c)},success:function(b){"success"===b.state?
// Refresh reviews
u(b.reviews_data,a):console.log(b)}}),!1},/**
         * syncLocalStorage
         *
         * @param review_id
         */
w=function(a){
// If it exists, get idies from it
localStorage.getItem("ekomi_review_ids_"+ekomi_product_id)?j=JSON.parse(localStorage["ekomi_review_ids_"+ekomi_product_id]):localStorage["ekomi_review_ids_"+ekomi_product_id]=JSON.stringify([]),
// If ID is given then push it
a&&(j.push(a),localStorage["ekomi_review_ids_"+ekomi_product_id]=JSON.stringify(j))},/**
         * Loads the style sheets into the page header
         *
         */
x=function(){
// Init header
var c=a.head||a.getElementsByTagName("head")[0],d=a.createElement("link"),e=a.createElement("link");
// Set vendor attributes
d.setAttribute("rel","stylesheet"),d.setAttribute("type","text/css"),d.setAttribute("href",ekomi_app.css_vendor),
// Set app attributes
e.setAttribute("rel","stylesheet"),e.setAttribute("type","text/css"),e.setAttribute("href",ekomi_app.css_app),
// Append it
c.appendChild(d),c.appendChild(e),
// Set the charset to UTF-8 if no charset specified
b("meta").is("[name=charset]")&&
// Append it
b("head").append('<meta charset="utf-8"">')};return{
// Init the application
init:l,/**
         * Loads only when we are in the ekomi page
         */
on_view_install:function(){
// Prevent bug when lot of widgets are called in the same page
if(!g){g=!0,
// Disable enter on the form: ignore enters in textareas
b("#ekomi_install_form").on("keyup keypress",function(a){var c=a.keyCode||a.which;return 13!==c||b("textarea").is(":focus")?void 0:(a.preventDefault(),!1)}),
// Listen to form submit
b("#ekomi_install_form").on("valid.fndtn.abide",function(){
// Submit form
n()}),
// Listen to check databse connection button
b("button.check_db").on("click",function(a){
// Do nothing if waiting for DB call
// Do nothing if waiting for DB call
// Submit form
return a.preventDefault(),s()?!1:void b("#ekomi_install_form").submit()}),
// Listen to populate database
b("button.populate_db").on("click",function(a){
// If disabled do nothing
// If disabled do nothing
// Do nothing if waiting for DB call
// Populate DB
return a.preventDefault(),b(this).is(".disabled")?!1:s()?!1:void r()}),
// Create a local DB called from te install.
b(".ekomi_mm_review_widget").on("click","a.create_local_db",function(a){
// Do nothing if waiting for DB call
// Do nothing if waiting for DB call
// Populate DB
return a.preventDefault(),s()?!1:void o()}),
// Create a local DB called from te install.
b(".ekomi_mm_review_widget").on("click","a.delete_config_php",function(a){
// Do nothing if waiting for DB call
// Do nothing if waiting for DB call
// Populate DB
return a.preventDefault(),s()?!1:void p()});
// Add more shops
var a=b("#additional-shops-template").html(),c=Handlebars.compile(a);b(".add_extra_shop").on("click",function(a){a.preventDefault();
// Get the length
var d=b("#additional-shops-container .extra-shop").length,e={index:d},f=c(e);
// Append template
b("#additional-shops-container").append(f)}),b(".trash_extra_shop").on("click",function(a){a.preventDefault(),
// Trash last shop template
b("#additional-shops-container .extra-shop").last().remove()})}},/**
         * Loads only when we are in app view pages
         */
on_widgets_view:function(){
// Prevent bug when lot of widgets are called in the same page
f||(f=!0,x(),w(),h=!1,t(),b(".ekomi_mm_review_widget").on("click",".ekomi_review_helpful_button",function(a){a.preventDefault();var c=b(this).data("review-id"),d=b(this).data("review-helpfulness");return b(this).parent().prev().show(),b(this).parent().remove(),w(c),b.ajax({url:ekomi_app.ajaxurl,data:{action:"saveFeedback",helpfulness:d,review_id:c},dataType:"json",cache:!1,type:"POST",error:function(a,b,c){console.log("FATAL ERROR: "+JSON.stringify(a)+" "+b+" "+c)},success:function(a){"success"!==a.state&&console.log(a)}}),!1}),b(".ekomi_mm_review_widget").on("change",".ekomi_reviews_sort",function(a){a.preventDefault(),ekomi_offset_page=0,i=0,b(".ekomi_mm_review_widget .ekomi_ratings_filter_reset").hide(),v("replace")}),b(".ekomi_mm_review_widget .ekomi_rating_graph").on("click",".progress, .ratings_stars_amount, .ratings_overview_number",function(a){a.preventDefault(),b(".ekomi_mm_review_widget .ekomi_ratings_filter_reset").hide();var c=b(this).parents(".ekomi_bar").first(),d=c.data("sort-id");i=d,c.find(".ekomi_ratings_filter_reset").show(),ekomi_offset_page=0,v("replace")}),b(".ekomi_mm_review_widget .ekomi_ratings_filter_reset").on("click",function(a){a.preventDefault(),b(".ekomi_mm_review_widget .ekomi_ratings_filter_reset").hide(),i=0,ekomi_offset_page=0,v("replace")}),b(".ekomi_mm_review_widget .loads_more_reviews").on("click",function(a){a.preventDefault(),ekomi_offset_page++,v("append")}))}}}(document,jQuery_2_1_4);jQuery_2_1_4(document).ready(function(a){"use strict";
// Include foundation
"undefined"!=typeof Foundation&&(Foundation.global.namespace="",a(document).foundation()),
// Init the app
ekomi_mm_review_container.init(),
// Call page specefic functions
a(".ekomi_mm_review_widget").is(".reviews_large")&&ekomi_mm_review_container.on_widgets_view(),
// Call page specefic functions
a(".ekomi_mm_review_widget").is(".view_install")&&ekomi_mm_review_container.on_view_install()});
//# sourceMappingURL=app.min.js.map